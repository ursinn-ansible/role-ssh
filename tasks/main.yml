---
- name: Set permissions for .ssh directory
  ansible.builtin.file:
    path: "/home/{{ system_ssh_user }}/.ssh"
    state: directory
    mode: 0700
    owner: "{{ system_ssh_user }}"
    group: "{{ system_ssh_user if ansible_os_family != 'Suse' else 'users' }}"

- name: "Insert public ssh key for user {{ system_ssh_user }}"
  ansible.builtin.blockinfile:
    dest: "/home/{{ system_ssh_user }}/.ssh/authorized_keys"
    create: true
    owner: "{{ system_ssh_user }}"
    group: "{{ system_ssh_user if ansible_os_family != 'Suse' else 'users' }}"
    mode: 0600
    block: "{{ system_ssh_user_key }}"


- name: Update SSH configuration to be more secure.
  lineinfile:
    dest: "{{ system_ssh_config_path }}"
    regexp: "{{ item.regexp }}"
    line: "{{ item.line }}"
    state: present
    validate: 'sshd -T -f %s'
    mode: 0644
  with_items:
    - regexp: "^PasswordAuthentication"
      line: "PasswordAuthentication no"
    - regexp: "^PermitRootLogin"
      line: "PermitRootLogin no"
    - regexp: "^Port"
      line: "Port {{ system_ssh_port }}"
    - regexp: "^UseDNS"
      line: "UseDNS no"
    - regexp: "^PermitEmptyPasswords"
      line: "PermitEmptyPasswords no"
    - regexp: "^ChallengeResponseAuthentication"
      line: "ChallengeResponseAuthentication no"
    - regexp: "^GSSAPIAuthentication"
      line: "GSSAPIAuthentication no"
    - regexp: "^X11Forwarding"
      line: "X11Forwarding no"
    - regexp: "^AuthenticationMethods"
      line: "AuthenticationMethods publickey"
  notify: restart ssh

- name: Insert banner
  ansible.builtin.copy:
    content: |
     WARNING: Unauthorized access to this system is forbidden and will be
     prosecuted by law. By accessing this system, you agree that your actions
     may be monitored if unauthorized usage is suspected.
    dest: /etc/issue.net
    mode: 0644

- name: Enable banner
  ansible.builtin.lineinfile: 
    dest: "{{ system_ssh_config_path }}"
    regexp: "^Banner none"
    line: "Banner /etc/issue.net"
    state: present
    create: true
    validate: 'sshd -T -f %s'
    mode: 0644
  notify: restart ssh

- name: Ensure SSH is started and enabled at boot
  ansible.builtin.service:
    name: "{{ system_ssh_name }}"
    state: "{{ system_ssh_service_state }}"
    enabled: "{{ system_ssh_service_enabled }}"
  ignore_errors: "{{ ansible_check_mode }}"

- name: Ensure handlers are notified now to avoid firewall conflicts
  ansible.builtin.meta: flush_handlers

- name: Check if group exists
  ansible.builtin.shell: /usr/bin/getent group | awk -F":" '{print $1}'
  changed_when: false
  register: etc_groups

- name: Add configured users allowed to connect over ssh
  lineinfile:
    dest: "{{ system_ssh_config_path }}"
    regexp: '^AllowUsers'
    line: "AllowUsers {{ system_ssh_allowed_users | join(' ') }}"
    state: present
    create: true
    validate: 'sshd -T -f %s'
    mode: 0644
  when: system_ssh_allowed_users | length > 0
  notify: restart ssh

- name: Add configured groups allowed to connect over ssh
  lineinfile:
    dest: "{{ system_ssh_config_path }}"
    regexp: '^AllowGroups'
    line: "AllowGroups {{ system_ssh_allowed_groups | join(' ') }}"
    state: present
    create: true
    validate: 'sshd -T -f %s'
    mode: 0644
  when: system_ssh_allowed_groups | length > 0
  notify: restart ssh

- name: Add configured user accounts to passwordless sudoers.
  lineinfile:
    dest: /etc/sudoers
    regexp: '^{{ item }}'
    line: '{{ item }} ALL=(ALL) NOPASSWD: ALL'
    state: present
    validate: 'visudo -cf %s'
    mode: 0440
  with_items: "{{ system_sudoers_passwordless }}"
  when: system_sudoers_passwordless | length > 0

- name: Add configured user accounts to passworded sudoers.
  lineinfile:
    dest: /etc/sudoers
    regexp: '^{{ item }}'
    line: '{{ item }} ALL=(ALL) ALL'
    state: present
    validate: 'visudo -cf %s'
    mode: 0440
  with_items: "{{ system_sudoers_passworded }}"
  when: system_sudoers_passworded | length > 0